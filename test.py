import os
import re
from datetime import datetime
from PIL import Image, ExifTags
import pyexiv2

def replace_exif(file, datetime_object):
	""" 
	Replaces the createdTime Exif data of image with date parsed from the datetime_object

	This function replaces the following three properties of the Exif data of 
	the image file that is passed to it:
		Exif.Image.DateTime, at offset 306
		Exif.Photo.DateTimeOriginal at offset 36867
		Exif.Photo.DateTimeDigitized at offset 36868
	This function expects that both PIL and piexif are imported

	For more information about Exif and offsets, see http://www.exiv2.org/tags.html

	Parameters
	----------
	file : string
		Absolute or relative path to the relevant image file of which the Exif data should 
		be changed
	datetime_object : datetime object
		A datetime object generated by the standard datetime module which 
		contains the date to which the image's Exif data should be changed
	
	"""

	img = Image.open(file)

	try:
		# If the image already contains data, we only replace the relevant properties
		exif_dict = piexif.load(img.info['exif'])
		print(f"Exif load for file '{file}'' successful")
	except KeyError:
		# If the image has no Exif data, we create the relevant properties
		print(f"No Exif data for file '{file}', creating Exif data instead...")
		exif_dict = {}
		exif_dict["0th"] = {}
		exif_dict["Exif"] = {}

	# We now have a useful Exif dict, time to adjust the values
	d = datetime_object.strftime("%Y:%m:%d %H:%M:%S")
	exif_dict["Exif"][36868] = d.encode("utf-8")
	exif_dict["Exif"][36867] = d.encode("utf-8")
	exif_dict["0th"][306] = d.encode("utf-8")

	# Convert into bytes and dump into file
	exif_bytes = piexif.dump(exif_dict)
	piexif.insert(exif_bytes, file)

	print(f"Exif data replacement for file '{file}' successful")


image_path = r'E:\Pictures\Photos\Test\1990-01-01 Samuel & siblings.jpg'
datetime = '1990:01:01 12:00:00'
replace_exif(image_path, datetime)
